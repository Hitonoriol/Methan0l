<% "Conditional operators" :: newl

/* Ternary operator */
a = 10; b = a * 100
foo = (b > a ? "b" : "a")
<% "Ternary result: " :: foo

/* Can also be used as if-else operator using execution syntax combined
 * with Unit definitions inside then and else arms */
if (a == nil) ? {
	<% "Then branch"
} else: {
	<% "Else branch"
}

/* If a branch contains only one expression, braces can be omitted: */
x = -100
if (x > 0) ?
	<% "Won't be executed"
else: if ((b % 3) >= 1) ?
	<% "Else-if branch (b mod 3 is >= 1)"
