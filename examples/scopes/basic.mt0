<% "Basic visibility rules"
{
	glob = 42
	
	foo = func: () {
		++#glob /* (1) One-time global lookup */
		global: glob /* (2) Global lookup and import by reference, now local `glob` points to the global one. */
		
		<% $"Modified global value: glob = {}" glob
		
		/* Block expressions (conditional operators, loops, try-catch) & lambdas
		 * can access function-local variables without the need of using (1) or (2): */
		x = 123
		if (true) ?
			<% $"x = {}" x
		lambda = f: () -> <% $"I can see x: {}" x
		lambda()
	}

	foo()
}