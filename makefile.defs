-include ../makeutils.inc

RM := rm -rf

BIN_NAME = $(addsuffix $(if $(filter $(OS),Windows_NT),.exe,),methan0l)
LIB_EXCLUDE = %Methan0l.cpp
LIB_OBJ = $(call rwildcard,./src,*.o)
LIB_SRC = $(patsubst %.cpp,%.o.pic,$(filter-out $(LIB_EXCLUDE),$(call rwildcard,../src,*.cpp)))
LIB_DIR = methan0l-sdk
LIB_NAME=libmethan0l
LIB_INC=-I../src
BOOST_DEPS = -lboost_filesystem-mt -lboost_system-mt

hdir=$(dir $(patsubst ../src/%,./$(LIB_DIR)/%,$1))

release: all lib
	cd ../modules && make
	tar -czf methan0l.tar.gz $(BIN_NAME) $(LIB_DIR) $(LIB_NAME).so ../modules

lib: shared-lib

shared-lib: all libclean lib-dirs headers $(LIB_SRC)
	g++ $(filter-out $(patsubst %.cpp,%.o.pic,$(LIB_EXCLUDE)),$(patsubst %.o,%.o.pic,$(LIB_OBJ))) -shared -Wl,-Bstatic $(BOOST_DEPS) -Wl,-Bdynamic -o $(LIB_NAME).so

%.o.pic: %.cpp
	$(eval src:=$^)
	g++ -std=c++17 -O3 $(LIB_INC) -c -fPIC $(src) -o $(patsubst %.cpp,%.o.pic,$(patsubst ../%,./%,$(src)))

.PHONY: headers
headers:
	cp methan0l.h $(LIB_DIR)
	$(foreach f, $(call rwildcard,../src,*.h), \
		$(eval $(shell mkdir -p "$(call hdir,$f)" || cp "$f" "$(call hdir,$f)")))

lib-dirs:
	mkdir -p $(LIB_DIR)

static-lib: all libclean lib-dirs headers
	ar rvs $(LIB_DIR)/$(LIB_NAME).a $(LIB_OBJ)

libclean:
	$(RM) $(LIB_DIR)/*