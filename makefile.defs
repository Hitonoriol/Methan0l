-include ../makeutils.inc

RM := rm -rf

BITS=64
ifeq ($(OS),Windows_NT) 
    OS_NAME:=Windows
else
    OS_NAME:=$(shell sh -c 'uname -s 2>/dev/null || echo Unknown')
endif

MACROS=-DBITS=$(BITS)
BIN_NAME = $(addsuffix $(if $(filter $(OS_NAME),Windows),.exe,),methan0l)
LIB_EXCLUDE = %Methan0l.cpp
LIB_OBJ = $(call rwildcard,./src,*.o)
LIB_SRC = $(patsubst %.cpp,%.o.pic,$(filter-out $(LIB_EXCLUDE),$(call rwildcard,../src,*.cpp)))
LIB_DIR = methan0l-sdk
LIB_NAME=libmethan0l
LIB_INC=-I../src

LINK_LIBS:=-lboost_filesystem -lboost_system
LINK_DYNAMIC:=

ifdef NO_STATIC
	LINK_DYNAMIC+= $(LINK_LIBS)
	LINK_LIBS=
endif

ifneq ($(OS_NAME),Windows)
	ifeq ($(OS_NAME),Linux)
		LINK_DYNAMIC+= -ldl
	endif
endif

hdir=$(dir $(patsubst ../src/%,./$(LIB_DIR)/%,$1))

.PHONY: all

release: all lib
	cd ../modules; make clean; make || true
	tar -czf methan0l-$(OS_NAME)$(BITS).tar.gz $(BIN_NAME) $(LIB_DIR) $(LIB_NAME).so ../modules

lib: libmethan0l.so

libmethan0l.so: all libclean lib-dirs headers $(LIB_SRC)
	g++ $(filter-out $(patsubst %.cpp,%.o.pic,$(LIB_EXCLUDE)),$(patsubst %.o,%.o.pic, $(call rwildcard,./src,*.o))) -shared -Wl,-Bstatic $(LINK_LIBS) -Wl,-Bdynamic $(LINK_DYNAMIC) -o $(LIB_NAME).so

%.o.pic: %.cpp
	$(eval src:=$^)
	g++ $(MACROS) -std=c++17 -O3 $(LIB_INC) -c -fPIC $(src) -o $(patsubst %.cpp,%.o.pic,$(patsubst ../%,./%,$(src)))

headers:
	cp methan0l.h $(LIB_DIR)
	$(foreach f, $(call rwildcard,../src,*.h), \
		$(eval $(shell mkdir -p "$(call hdir,$f)"; cp "$f" "$(call hdir,$f)")))

lib-dirs:
	mkdir -p $(LIB_DIR)

static-lib: all libclean lib-dirs headers
	ar rvs $(LIB_DIR)/$(LIB_NAME).a  $(call rwildcard,./src,*.o)

libclean:
	$(RM) $(LIB_DIR)/*